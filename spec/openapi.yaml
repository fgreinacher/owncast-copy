openapi: 3.1.0

info:
  version: 0.1.2
  title: Owncast APIs
  description: |-
    Internal
    The APIs required to make the Owncast web interface and internal functionality work. These APIs will never reach stability and will always change as Owncast features and functionality change. This means these endpoints are not good options to build your own tooling and features on top of. You can, however, of course can if that risk is acceptable to you.

    Admin
    The APIs used to configure the Owncast server, as well as power the web admin interface. These APIs are protected by the admin password, using HTTP Basic authentication. They should not be used by external tools or integrations as it would require you to give your admin password to a third party.
  contact:
    name: Gabe Kangas
    email: gabek@real-ity.com
    url: 'http://owncast.online'
  license:
    url: 'https://github.com/owncast/owncast/blob/develop/LICENSE'
    name: MIT
servers:
  - url: 'http://localhost:8080'
    description: Localhost port 8080

paths:
  /status:
    get:
      summary: Get the status of the server
      operationId: getStatus
      tags:
        - internal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
  /emoji:
    get:
      summary: Get list of custom emojis supported in the chat
      operationId: getEmoji
      tags:
        - internal
      responses:
        '200':
          description: List of valid emojis
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Emoji"
        '500':
          $ref: "#/components/responses/500"
  /chat:
    get:
      summary: Gets a list of chat messages
      operationId: getChatList
      tags:
        - internal
      responses:
        '200':
          description: List of chat messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessages"
        '501':
          $ref: "#/components/responses/501"

components:
  schemas:
    Status:
      type: object
      description: Response for status
      properties:
        serverTime:
          type: string
        lastConnectTime:
          type: string
        lastDisconnectTime:
          type: string
        versionNumber:
          type: string
        viewerCount:
          type: integer
        online:
          type: boolean
    Emoji:
      type: object
      description: Name and url for an emoji
      properties:
        name:
          type: string
          description: The name of the emoji
        url:
          type: string
          description: URL for the emoji image
    User:
      type: object
      properties:
        createdAt:
          type: string
        disabledAt:
          type: string
        nameChangedAt:
          type: string
        id:
          type: string
        displayName:
          type: string
        previousNames:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            type: string
        displayColor:
          type: integer
        isBot:
          type: boolean
        authenticated:
          type: boolean
    Event:
      type: object
      properties:
        timestamp:
          type: string
        type:
          type: string
        id:
          type: string
    UserEvent:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        hiddenAt:
          type: string
        clientId:
          type: integer
    MessageEvent:
      type: object
      properties:
        body:
          type: string
    ChatMessages:
      type: array
      items:
        oneOf:
          - $ref: "#/components/schemas/UserMessage"
          - $ref: "#/components/schemas/SystemMessage"
          - $ref: "#/components/schemas/ActionMessage"
          - $ref: "#/components/schemas/FederatedAction"
    UserMessage:
      type: object
      allOf:
        - $ref: "#/components/schemas/Event"
        - $ref: "#/components/schemas/UserEvent"
        - $ref: "#/components/schemas/MessageEvent"
    SystemMessage:
      type: object
      allOf:
        - $ref: "#/components/schemas/Event"
        - $ref: "#/components/schemas/MessageEvent"
    ActionMessage:
      type: object
      allOf:
        - $ref: "#/components/schemas/Event"
        - $ref: "#/components/schemas/MessageEvent"
    FederatedAction:
      type: object
      allOf:
        - $ref: "#/components/schemas/Event"
        - $ref: "#/components/schemas/MessageEvent"
        - type: object
          properties:
            image:
              type: string
            link:
              type: string
            title:
              type: string
    Error:
      type: object
      description: Structure for an error response
      properties:
        error:
          type: string
  responses:
    '404':
      description: Not found
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

